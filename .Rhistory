library(survival)
library(grid)
library(ggplot2)
library(ggpubr)
library(magrittr)
library(scales)
source("weibull.R")
x <- c(1:5); y <- x # create some data
par(pch=22, col="red") # plotting symbol and color
par(mfrow=c(2,4)) # all plots on one page
opts = c("p","l","o","b","c","s","S","h")
for(i in 1:length(opts)){
heading = paste("type=",opts[i])
plot(x, y, type="n", main=heading)
lines(x, y, type=opts[i])
}
getwd()
filePath <- "data\\AllData.xlsx"
AllData <- read.xlsx(filePath, 1)
AllData <- AllData[order(xtfrm(AllData[,"Vehicle.ID"]), AllData[,"Test.Life"]), ]
# Only care about these 3 columns. Dont care about EFF vs OMF for All failures analysis.
AllOMF <- AllData[grep("OMF", AllData$Incident.Charge), c("Vehicle.ID", "Subsystem", "Test.Life")]
AllEFF <- AllData[grep("EFF", AllData$Incident.Charge), c("Vehicle.ID", "Subsystem", "Test.Life")]
AllFailures <- AllData[, c("Vehicle.ID", "Subsystem", "Test.Life")]
# Again, we can only consider observed failure times.
# This is a complete dataset, unless we consider total individual components.
# Need data frames for ggplot
AllFails <- sort(AllFailures[, "Test.Life"])
AllFails.asFrame <- as.data.frame(AllFails)
names(AllFails.asFrame) <- c("All")
GMV4.OMF <- AllOMF[grep("PQT04", AllOMF$Vehicle.ID), "Test.Life"]
GMV4.OMF.asFrame <- as.data.frame(GMV4.OMF)
p <- make.Weibull.analysis()
p <- make.Weibull.analysis(GMV4.OMF.asFrame)
plot(p)
p <- make.Weibull.analysis(GMV4.OMF.asFrame, line = 'lm')
plot(p)
p <- make.Weibull.analysis(GMV4.OMF.asFrame, line = 'lm', conf.lvl = .99)
plot(p)
p <- make.Weibull.analysis(GMV4.OMF.asFrame, line = 'mle')
source("weibull.r")
p <- make.Weibull.analysis(GMV4.OMF.asFrame, line = 'mle')
source("weibull.r")
p <- make.Weibull.analysis(GMV4.OMF.asFrame, line = 'mle')
source("weibull.r")
p <- make.Weibull.analysis(GMV4.OMF.asFrame, line = 'mle')
source("weibull.r")
p <- make.Weibull.analysis(GMV4.OMF.asFrame, line = 'mle')
source("weibull.r")
p <- make.Weibull.analysis(GMV4.OMF.asFrame, line = 'mle')
plot(p)
p <- make.Weibull.analysis(GMV4.OMF.asFrame, line = 'mle', conf.lvl = .99)
plot(p)
p <- make.Weibull.analysis(GMV4.OMF.asFrame, line = c('mle', 'lm'))
plot(p)
p <- make.Weibull.analysis(GMV4.OMF.asFrame, line = c('mle', 'lm'), conf.lvl = .95)
plot(p)
GMV4.All <- AllFailures[grep("PQT04", AllFailures$Vehicle.ID), "Test.Life"]
GMV4.All.asFrame <- as.data.frame(GMV4.All)
p <- make.Weibull.analysis(GMV4.ALL.asFrame, line = 'lm')
p <- make.Weibull.analysis(GMV4.All.asFrame, line = 'lm')
plot(p)
p <- make.Weibull.analysis(GMV4.All.asFrame, line = c('lm', 'mle'))
plot(p)
p <- make.Weibull.analysis(GMV4.All.asFrame, line = c('lm', 'mle'), conf.lvl = .99)
plot(p)
blackBox <- setNames(as.data.frame(sort(AllFailures[grep("AXLE", AllFailures$Subsystem), "Test.Life"])), "Axle Failures")
p <- make.Weibull.analysis(blackBox, line = c('lm', 'mle'), conf.lvl = .99)
plot(p)
p <- make.Weibull.analysis(blackBox, line = c('lm'))
plot(p)
p <- make.Weibull.analysis(AllFails.asFrame, line = c('lm'))
plot(p)
p <- make.Weibull.analysis(blackBox, line = c('lm'))
plot(p)
p <- make.Weibull.analysis(AllFails.asFrame)
plot(p)
p <- make.Weibull.analysis(AllFails.asFrame, line = 'lm')
plot(p)
p <- make.Weibull.analysis(AllFails.asFrame, line = 'lm', conf.lvl = .95)
plot(p)
blackBox <- setNames(as.data.frame(sort(AllFailures[grep("AXLE", AllFailures$Subsystem), "Test.Life"])), "Axle Failures")
plot(p)
p <- make.Weibull.analysis(blackBox)
plot(p)
p <- make.Weibull.analysis(blackBox, title = "HELLO MEGHAN!", conf.lvl = .99)
plot(p)
p <- make.Weibull.analysis(blackBox, title = "HELLO MEGHAN!", line = "lm", conf.lvl = .99)
plot(p)
p <- make.Weibull.analysis(blackBox, title = "HELLO MEGHAN!", line = c("lm", "mle"), conf.lvl = .99)
plot(p)
stuff <- rweibull(136, .7, 562.123)
p <- make.Weibull.analysis(stuff, title = "random weibull data")
stuff <- as.data.frame(sort(rweibull(136, .7, 562.123)))
stuff
p <- make.Weibull.analysis(stuff, title = "random weibull data")
plot(p)
p <- make.Weibull.analysis(stuff, title = "random weibull data", line = "lm")
plot(p)
p <- make.Weibull.analysis(stuff, title = "random weibull data", line = "lm", conf.lvl = .95)
plot(p)
p <- make.Weibull.analysis(stuff, title = "random weibull data", line = "lm", conf.lvl = .1)
plot(p)
p <- make.Weibull.analysis(stuff, title = "random weibull data", line = c("lm", "mle"))
plot(p)
p <- make.Weibull.analysis(stuff, title = "random weibull data", line = c("lm", "mle"), conf.lvl = .99)
plot(p)
p <- make.Weibull.analysis(AllFails.asFrame, title = "ALL 3 Vehicles")
plot(p)
p <- make.Weibull.analysis(AllFails.asFrame, title = "ALL 3 Vehicles", line = "lm")
plot(p)
p <- make.Weibull.analysis(AllFails.asFrame, title = "ALL 3 Vehicles", line = c("lm", "mle"))
plot(p)
blackBox <- setNames(as.data.frame(sort(AllFailures[grep("AXLE", AllFailures$Subsystem), "Test.Life"])), "Axle Failures")
p <- make.Weibull.analysis(blackBox, title = "All Axle Failures")
plot(p)
p <- make.Weibull.analysis(blackBox, title = "All Axle Failures", line = "lm", conf.lvl = .95)
plot(p)
p <- make.Weibull.analysis(blackBox, title = "All Axle Failures", line = c("lm", "mle"), conf.lvl = .95)
plot(p)
source("weibull.r")
p <- make.Weibull.analysis(blackBox, title = "All Axle Failures", line = c("lm"))
plot(p)
p <- make.Weibull.analysis(blackBox, title = "All Axle Failures", line = c("lm", "mle"))
p <- make.Weibull.analysis(blackBox, title = "All Axle Failures", line = c("lm", "mle"))
source("weibull.r")
p <- make.Weibull.analysis(blackBox, title = "All Axle Failures", line = c("lm", "mle"))
plot(p)
p <- make.Weibull.analysis(blackBox, title = "All Axle Failures", line = c("lm", "mle"), conf.lvl = .99)
plot(p)
p <- make.Weibull.analysis(blackBox, title = "All Axle Failures", line = c("lm", "mle"))
p
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
head(AllFails.asFrame)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
AllFails.asFrame
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures")
plot(p)
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = "lm")
plot(p)
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = "lm")
plot(p)
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = "lm", conf.lvl = .99)
plot(p)
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm","mle"), conf.lvl = .99)
plot(p)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm","mle"), conf.lvl = .99)
plot(p)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm","mle"), conf.lvl = .99)
plot(p)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("mle"))
plot(p)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("mle"))
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("mle"))
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("mle"))
plot(p)
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .95)
plot(p)
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999)
plot(p)
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .999999)
plot(p)
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = 1)
plot(p)
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .999999999)
plot(p)
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
plot(p)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
plot(p)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
plot(p)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
plot(p)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
plot(p)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
plot(p)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
plot(p)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
plot(p)
source("weibull.r")
p <- get.weibull.analysis(AllFails.asFrame, title = "All Failures", line = c("lm"), conf.lvl = .9999999999999)
plot(p)
r <- c(1,2,3,4)
split(r)
unlist(r)
r
r[1]
r[4]
length(r)
r
list(r)
r
x <- 1
x
list(x)
f <- list(c(5,6), c(7, 8))
f
q <- c(8, 9)
f[[2]] <- q
f
f[[1]][1] <- 7
f
unlist(f)
f[[1]][1] <- a
f
f[[1]][1] <- 'a'
f
is.numeric(f)
is.numeric(f) f <- list(c(5,6), c(7, 8))
f <- list(c(5,6), c(7, 8))
is.numeric(f)
c("a", 1, 2, 3\)
f <- c("a", 1, 2, 3)
f
is.numeric(f)
f <- c(56, 1, 2, 3)
is.numeric(f)
source""
source("weibull.r")
GMV4.All <- AllFailures[grep("PQT04", AllFailures$Vehicle.ID), "Test.Life"]
GMV4.All.asFrame <- as.data.frame(GMV4.All)
p <- get.weibull.analysis(GMV4.All.asFrame)
plot(p)
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm")
plot(p)
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = 1)
plot(p)
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = 1)
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = 1)
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = 1)
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = 1)
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = 1)
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = 1)
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = 1)
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = 1)
plot(p)
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = 1)
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = 1)
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = 1)
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = 1)
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = 1)
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = c(1, .0001))
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = c(1, .0001))
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = c(1, .0001))
source("weibull.r")
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = c(1, .0001))
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = c(1, .0001))
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = c(1, .0001))
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = c(1, .0001))
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", restr = c(1, .0001))
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm")
plot(p)
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", conf.lvl = .999999)
plot(p)
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", conf.lvl = .999999, restr = 1)
plot(p)
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", conf.lvl = .999999, restr = c(1, .00001))
plot(p)
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", conf.lvl = .999999, restr = c(1, .00001))
plot(p)
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", conf.lvl = .999999, restr = c(1, .00001))
plot(p)
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", conf.lvl = .999999, restr = c(1, .00001))
plot(p)
source("weibull.r")
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", conf.lvl = .999999, restr = c(1, .00001))
plot(p)
p <- get.weibull.analysis(GMV4.All.asFrame, line = "lm", conf.lvl = .999999, restr = c(1, .0001))
plot(p)
GMV4.OMF <- AllOMF[grep("PQT04", AllOMF$Vehicle.ID), "Test.Life"]
GMV4.OMF.asFrame <- as.data.frame(GMV4.OMF)
GMV4.All.asFrame
GMV4.Surv.inter_failures <- Surv(make.interFailures(GMV4.OMF), replicate(length(GMV4.OMF), 1))
make.interFailures <- function(cumFailures){
# Check to see if sorted.
if(is.unsorted(cumFailures)){
cumFailures <- sort(cumFailures)
}
nObservation <- length(cumFailures)
# Pre-allocates memory
interFailures <- numeric(nObservation)
# Store first failure time
interFailures[1] <- cumFailures[1]
for (i in seq_along(cumFailures)) {
interFailures[i + 1] <- cumFailures[i + 1] - cumFailures[i]
}
# The for loop creates an NA, so just dropping it
# There is a performance tradeoff according to:
# https://stackoverflow.com/questions/12114439/remove-the-last-element-of-a-vector
if(nObservation < 9000){
interFailures <- interFailures[-length(interFailures)]
}
else{
interFailures <- head(interFailures, -1)
}
# replacing in case there is a problem with parameter solving
interFailures <- replace(interFailures, interFailures == 0, .0001)
rm(list = c("nObservation", "cumFailures"))
return(as.numeric(interFailures))
}
GMV4.Surv.inter_failures <- Surv(make.interFailures(GMV4.OMF), replicate(length(GMV4.OMF), 1))
GMV4.Surv.inter_failures
sum(GMV4.Surv.inter_failures)
sum(make.interFailures(GMV4.OMF))
length(GMV4.OMF)
dt <- data.table(AllFailures, key="Vehicle.ID")
i1 <- dt[,which.max(Test.Life), by = Vehicle.ID][[2]]
i2 <- dt[,.N, by = Vehicle.ID][[2]]
TotalVehicleMiles <- dt[i1 + cumsum(i2) - i2,]
TotalVehicleMiles
TotalVehicleMiles$Test.Life[1]
sum(make.interFailures(GMV4.OMF))/length(GMV4.OMF)
sum(make.interFailures(GMV4.OMF))/(length(GMV4.OMF)+1)
GMV4.OMF
GMV4.OMF[length(GMV4.OMF)]
GMV4.FAULT1 <- GMV4.OMF[]
GMV4.FAULT1[length(GMV4.FAULT1)] <- TotalVehicleMiles$Test.Life[1]
GMV4.FAULT1
sum(make.interFailures(GMV4.FAULT1))/length(GMV4.FAULT1)
source("weibull.r")
fb <- c(0, 168, 840, 1344, 1608)
fb
as.data.frame(fb)
fb<-as.data.frame(fb)
lutz <- get.weibull.analysis(fb)
library(xlsx)
library(data.table)
library(Hmisc)
# for using custom step function in ggplot
library(proto)
library(GGally)
library(survminer)
library(survival)
library(grid)
library(ggplot2)
library(ggpubr)
library(magrittr)
library(scales)
library(fitdistrplus)
lutz <- get.weibull.analysis(fb)
source("weibull.R")
source("misc.r")
lutz <- get.weibull.analysis(fb)
fb
GMV4.EFF.asFrame
fb
rm(fb)
fb <- c(168, 840, 1344,1608)
fb
fb <- as.data.frame(fb)
lutz <- as.data.frame(fb)
lutz
wLutz <- get.weibull.analysis(lutz)
plot(wLutz)
wLutz <- get.weibull.analysis(lutz, line = TRUE)
plot(wLutz)
wLutz <- get.weibull.analysis(lutz, line = TRUE)
plot(wLutz)
wLutz <- get.weibull.analysis(lutz, line = TRUE)
plot(wLutz)
wLutz <- get.weibull.analysis(lutz, line = TRUE, conf.lvl = .95)
plot(wLutz)
lutz
install.packages("acepack")# this is for Hmisc, which is for stat_summary() in ggplot
install.packages("survminer")
install.packages("GGally")
library(xlsx)
library(data.table)
library(Hmisc)
# for using custom step function in ggplot
library(proto)
library(GGally)
library(survminer)
library(survival)
library(grid)
library(ggplot2)
library(ggpubr)
library(magrittr)
library(scales)
library(fitdistrplus)
source("weibull.R")
source("misc.r")
dat <- c(16, 34, 53, 75, 93, 120, 120, 120, 120, 120)
dat <- as.data.frame(dat)
dat
d <- get.weibull.analysis(dat)
plot(d)
d <- get.weibull.analysis(dat, line = TRUE)
plot(d)
GMV4.EFF
GMV4.EFF.asFrame
source("weibull.r")
w <- get.weibull.analysis(GMV4.EFF.asFrame)
library(xlsx)
library(data.table)
library(Hmisc)
# for using custom step function in ggplot
library(proto)
library(GGally)
library(survminer)
library(survival)
library(grid)
library(ggplot2)
library(ggpubr)
library(magrittr)
library(scales)
library(fitdistrplus)
w <- get.weibull.analysis(GMV4.EFF.asFrame)
plot(w)
w <- get.weibull.analysis(GMV4.EFF.asFrame, line = TRUE)
plot(w)
setwd("~/IDA/DEAMS")
filePath <- "data\\DEAMS_SERENA.xlsx"
rm(list = ls())
AllData <- read.xlsx(filePath, 1)
library(xlsx)
AllData <- read.xlsx(filePath, 1)
filePath <- "data\\DEAMS_SERENA.xlsx"
AllData <- read.xlsx(filePath, 1)
head(AllData)
View(AllData)
AllData <- read.xlsx(filePath, 5)
AllData <- read.xlsx(filePath, 1, startRow = 5, colIndex = c(1, 4, 6, 7, 9))
