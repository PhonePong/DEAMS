else{
interFailures <- head(interFailures, -1)
}
# replacing in case there is a problem with parameter solving
#interFailures <- replace(interFailures, interFailures == 0, .0001)
rm(list = c("nObservation", "cumFailures"))
return(as.numeric(interFailures))
}
head(make.interFailures(AllData$Time.to.Fail))
length(make.interFailures(AllData$Time.to.Fail))
AllData$Time.Between.Failure <- make.interFailures(AllData$Time.to.Fail)
apply(AllData$Time.Between.Failure == 0, 1, sum)
rowsum(AllData$Time.Between.Failure == 0)
typeof(AllData$Time.Between.Failure)
rowSums(AllData$Time.Between.Failure == 0)
colSums(AllData$Time.Between.Failure == 0)
colSums(AllData == 0)
colSums(AllData != 0)
AllData$Time.Between.Failure[1076]
table(AllData$Time.Between.Failure)
t <- table(AllData$Time.Between.Failure)
t[names(t)==0]
t[names(t)==0, 2]
t[2, names(t)==0]
t[names(t)==0,1]
t[1,names(t)==0,1]
t[1, names(t)==0]
t[2,names(t)==0]
length(t[names(t)==0])
unlist(t[names(t)==0])
t[names(t)==0]
as.data.frame(t(numbers))
as.data.frame(t)
t[names(t)==0]
as.data.frame(t[names(t)==0])
as.data.frame(t[names(t)==0, 2])
typeof(t)
typeof(t[names(t)==0, 2])
typeof(t[names(t)==0])
length(t[names(t)==0])
t <- table(AllData$Time.Between.Failure)
head(t)
rm(list = "t")
make.interFailures <- function(cumFailures){
# Check to see if sorted.
if(is.unsorted(cumFailures)){
cumFailures <- sort(cumFailures)
}
nObservation <- length(cumFailures)
# Pre-allocates memory
interFailures <- numeric(nObservation)
# Store first failure time
interFailures[1] <- cumFailures[1]
for (i in seq_along(cumFailures)) {
interFailures[i + 1] <- cumFailures[i + 1] - cumFailures[i]
}
# The for loop creates an NA, so just dropping it
# There is a performance tradeoff according to:
# https://stackoverflow.com/questions/12114439/remove-the-last-element-of-a-vector
if(nObservation < 9000){
interFailures <- interFailures[-length(interFailures)]
}
else{
interFailures <- head(interFailures, -1)
}
t <- table(interFailures)
if( t[names(t) == 0] > 1){
# replacing in case there is a problem with parameter solving
interFailures <- replace(interFailures, interFailures == 0, .0001)
}
rm(list = c("nObservation", "cumFailures", "t"))
return(as.numeric(interFailures))
}
#Make Times Between Failure column
AllData$Time.Between.Failure <- make.interFailures(AllData$Time.to.Fail)
head(AllData$Time.Between.Failure)
colSums(AllData$Time.Between.Failure)
colSums(AllData)
colSums(AllData$Time.Between.Failure)
rowSums(AllData$Time.Between.Failure)
colSums(AllData == 0)
colSums(AllData != 0)
library("survival")
Surv(AllData$Time.to.Fail)
AllData.Surv <- Surv(AllData$Time.to.Fail)
AllData.km <- survfit(AllData.Surv ~ 1, conf.int = .95, conf.type = "plain")
AllData.weib <- survreg(AllData.Surv ~ 1, dist = "weibull")
AllData.weib <- survreg(AllData.Surv, dist = "weibull")
ggsurvplot(AllData.km, title = "ALL DEAMS", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
library(ggsurv)
library("ggsurv")
library(survival)
ggsurvplot(AllData.km, title = "ALL DEAMS", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
library(ggplot2)
ggsurvplot(AllData.km, title = "ALL DEAMS", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
library(survminer)
ggsurvplot(AllData.km, title = "ALL DEAMS", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
make.interval.Surv <- function(failureData){
if(is.unsorted(failureData)){
failureData <- sort(failureData)
}
t <- data.frame(table(failureData))
t <- setDF(t)
count <- 1
status <- numeric(0)
for(i in t$Freq){
if(i == 1){
status[count] <- i
count = count + 1
}
else{
status <- c(status, c(1, replicate(i - 1, 0)))
count = count + 1 + (i - 1)
}
rm(list = c("t", "count"))
return(Surv(failureData, status))
}
AllData.Surv <- make.interval.Surv(AllData$Time.to.Fail)
library(data.table)
AllData.Surv <- make.interval.Surv(AllData$Time.to.Fail)
AllData.Surv
tail(AllData.Surv)
AllData.Surv[1070]
AllData.Surv[1076]
AllData.km <- survfit(AllData.Surv, conf.int = .95, conf.type = "plain")
AllData.km <- survfit(AllData.Surv ~ 1, conf.int = .95, conf.type = "plain")
ggsurvplot(AllData.km, title = "ALL DEAMS", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
Time.to.Fail.Surv <- Surv(AllData$Time.to.Fail)
Time.to.Fail.km <- survfit(Time.to.Fail.Surv, conf.int = .95, conf.type = "plain")
ggsurvplot(Time.to.Fail.km, title = "Time to Failure", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
Time.to.Fail.Surv <- Surv(AllData$Time.to.Fail)
Time.to.Fail.km <- survfit(Time.to.Fail.Surv ~ 1, conf.int = .95, conf.type = "plain")
ggsurvplot(Time.to.Fail.km, title = "Time to Failure", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
Time.Between.Fails.Surv <- Surv(AllData$Time.to.Fail)
Time.Between.Fails.km <- survfit(Time.Between.Fails.Surv ~ 1, conf.int = .95, conf.type = "plain")
ggsurvplot(Time.Between.Fails.km, title = "ALL DEAMS", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
Time.Between.Fails.Surv <- Surv(AllData$Time.Between.Failure)
Time.Between.Fails.km <- survfit(Time.Between.Fails.Surv ~ 1, conf.int = .95, conf.type = "plain")
ggsurvplot(Time.Between.Fails.km, title = "Times Between Failures", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
AllData$Time.to.Fail
write(AllData$Time.to.Fail, "", sep = "\t")
write(AllData$Time.to.Fail, "", sep = " ")
write(as.data.frame(AllData$Time.to.Fail), "", sep = " ")
write(AllData$Time.to.Fail, "", sep = "\n")
write(AllData$Time.to.Fail, "new file", sep = "\n")
write(AllData$Time.to.Fail, "data/Failure_Times", sep = "\n")
write(AllData$Time.to.Fail, "data/Failure_Times.txt", sep = "\n")
write(AllData$Time.Between.Failure, "data/Time_Between_Failure.txt", sep = "\n")
library(xlsx)
library(ggplot2)
library(survMisc)
library(survival)
library(survminer)
library(data.table)
source("misc.R")
# Getting the data
AllData <- read.xlsx(filePath, 1, startRow = 6, colIndex = c(1, 4, 5, 6, 7, 9))
AllData$Type <- gsub('DEAMS - ', '', AllData$Type)
AllData$Severity <- gsub('Severity ', '', AllData$Severity)
AllData <- AllData[order(AllData$Submit.Date), ]
# Regex to get the locations and customer (after this should drop description)
AllData$Location <- trimws(sapply(regmatches(AllData$Description, gregexpr("(?<=Base:).*?(?=\\w).*?(?=(\\s{2,3})|((I|i)ssue:))", AllData$Description, perl = TRUE)), '[',1))
AllData$Customer <- trimws(sapply(regmatches(AllData$Description, gregexpr("(?<=((C|c)ustomer:)).*?(?=\\w).*?(?=(\\s{2,3})|((E|e)mail:))", AllData$Description, perl = TRUE)), '[',1))
#drop all the description column after getting what we want
drops <- "Description"
AllData <- AllData[,!(names(AllData) %in% drops)]
#Make Time to Failure Column
AllData$Time.to.Fail <- difftime(AllData$Submit.Date, AllData$Submit.Date[1], units = "hours")
#Make Times Between Failure column
AllData$Time.Between.Failure <- make.interFailures(AllData$Time.to.Fail)
write(AllData$Time.to.Fail, "data/Failure_Times.txt", sep = "\n")
write(AllData$Time.Between.Failure, "data/Time_Between_Failure.txt", sep = "\n")
#Using survival packages to plot Kaplan Maier
#Failure Times
Time.to.Fail.Surv <- Surv(AllData$Time.to.Fail)
Time.to.Fail.km <- survfit(Time.to.Fail.Surv ~ 1, conf.int = .95, conf.type = "plain")
ggsurvplot(Time.to.Fail.km, title = "Time to Failure", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
#Inter-Failure Times
Time.Between.Fails.Surv <- Surv(AllData$Time.Between.Failure)
Time.Between.Fails.km <- survfit(Time.Between.Fails.Surv ~ 1, conf.int = .95, conf.type = "plain")
ggsurvplot(Time.Between.Fails.km, title = "Times Between Failures", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
Time.to.Fail.Surv <- Surv(AllData$Time.to.Fail)
Time.to.Fail.km <- survfit(Time.to.Fail.Surv ~ 1, conf.int = .95, conf.type = "plain")
ggsurvplot(Time.to.Fail.km, title = "Kaplan Maier: Time to Failure", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
ggsurvplot(Time.to.Fail.km, title = "Kaplan Meier: Time to Failure", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
ggplot(data=AllData, aes(Time.Between.Failure, Time.to.Fail))+geom_point()
ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+geom_point()
ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+geom_point()+geom_line()
typeof(AllData$Time.Between.Failure)
typeof(AllData$Time.to.Fail)
Time.Between.Fails.Surv <- Surv(AllData$Time.Between.Failure)
Time.Between.Fails.km <- survfit(Time.Between.Fails.Surv ~ 1, conf.int = .95, conf.type = "plain")
ggsurvplot(Time.Between.Fails.km, title = "Kaplan Meier: Times Between Failures", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FA
Time.Between.Fails.Surv <- Surv(AllData$Time.Between.Failure)
Time.Between.Fails.km <- survfit(Time.Between.Fails.Surv ~ 1, conf.int = .95, conf.type = "plain")
ggsurvplot(Time.Between.Fails.km, title = "Kaplan Meier: Times Between Failures", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FA
Time.Between.Fails.Surv <- Surv(AllData$Time.Between.Failure)
Time.Between.Fails.km <- survfit(Time.Between.Fails.Surv ~ 1, conf.int = .95, conf.type = "plain")
ggsurvplot(Time.Between.Fails.km, title = "Kaplan Meier: Times Between Failures", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
Time.Between.Fails.Surv <- Surv(AllData$Time.Between.Failure)
Time.Between.Fails.km <- survfit(Time.Between.Fails.Surv ~ 1, conf.int = .95, conf.type = "plain")
ggsurvplot(Time.Between.Fails.km, title = "Kaplan Meier: Times Between Failures", ggtheme = theme_gray(base_size = 15), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
#UNRELIABILITY
ggsurvplot(Time.to.Fail.km, title = "Kaplan Meier: Time to Failure", ggtheme = theme_gray(base_size = 15), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
#RELIABILITY
ggsurvplot(Time.to.Fail.km, title = "Kaplan Meier: Time to Failure", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
#UNRELIABILITY
ggsurvplot(Time.to.Fail.km, title = "Kaplan Meier: Time to Failure", ggtheme = theme_gray(base_size = 15), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "UNRELIABILITY")+coord_cartesian(expand = FALSE)
#RELIABILITY
ggsurvplot(Time.to.Fail.km, title = "Kaplan Meier: Time to Failure", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("TIME BETWEEN FAILURES")+geom_point()+geom_line()
p1 <- ggsurvplot(Time.to.Fail.km, title = "Kaplan Meier: Time to Failure", ggtheme = theme_gray(base_size = 15), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE)
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, title = "Kaplan Meier: Time to Failure", ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
#Inter-Failure Times
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("TIME BETWEEN FAILURES")+geom_point()+geom_line()
multiplot(p1,p2,p3, cols=2)
grid.arrange(p1,p2,p3)
library(gridExtra)
grid.arrange(p1,p2,p3)
library(grid)
grid.arrange(p1,p2,p3)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
multiplot(p1,p2,p3, cols=2)
multiplot(p1,p2,p3, cols=1)
library(ggpubr)
ggarrange(p1, p2, p3, ncol = 2, nrow = 2)
class(p1)
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2)
grid.arrange(p1$plot,p2$plot,p3, ncol = 2)
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)+ggtitle("Kaplan Meier: Time to Failure")
p2
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 15), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE)
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black")+ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2)
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 15), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black")+ labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE)
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black")+ labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
ggarrange(p1$plot, p2$plot, p3, labels = c("Kaplan Meier: Time to Failure", "Kaplan Meier: Time to Failure"),ncol = 2, nrow = 2)
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 15), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE) + theme(plot.title = element_text(size = 9, face = "bold"))
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 15), conf.int = TRUE, color = "black", conf.int.fill = "black")+ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)+ theme(plot.title = element_text(size = 9, face = "bold"))
#Inter-Failure Times
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("TIME BETWEEN FAILURES")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 9, face = "bold"))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2)
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE) + theme(plot.title = element_text(size = 9, face = "bold"))
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(), conf.int = TRUE, color = "black", conf.int.fill = "black")+ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)+ theme(plot.title = element_text(size = 9, face = "bold"))
#Inter-Failure Times
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("TIME BETWEEN FAILURES")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 9, face = "bold"))
\
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE) + theme(plot.title = element_text(size = 9, face = "bold"))
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(), conf.int = TRUE, color = "black", conf.int.fill = "black")+ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)+ theme(plot.title = element_text(size = 9, face = "bold"))
#Inter-Failure Times
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("TIME BETWEEN FAILURES")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 9, face = "bold"))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2)
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 9), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE) + theme(plot.title = element_text(size = 9, face = "bold"))
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 12), conf.int = TRUE, color = "black", conf.int.fill = "black")+ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)+ theme(plot.title = element_text(size = 9, face = "bold"))
#Inter-Failure Times
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("TIME BETWEEN FAILURES")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 9, face = "bold"))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2)
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 9), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE)
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 12), conf.int = TRUE, color = "black", conf.int.fill = "black")+ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
#Inter-Failure Times
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("TIME BETWEEN FAILURES")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 9, face = "bold"))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2)
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 11, face = "bold"), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE)
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 11), conf.int = TRUE, color = "black", conf.int.fill = "black")+ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2)
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 11, face = "bold"), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE)
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 11, face = "bold"), conf.int = TRUE, color = "black", conf.int.fill = "black")+ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
#Inter-Failure Times
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("TIME BETWEEN FAILURES")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 11, face = "bold"))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2)
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 11, face = "bold"), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE)
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 11, face = "bold"), conf.int = TRUE, color = "black", conf.int.fill = "black")+ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
#Inter-Failure Times
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("TIME BETWEEN FAILURES")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 11, face = "bold"))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2)
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 13, face = "bold"), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE)
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 11), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE)
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 11), conf.int = TRUE, color = "black", conf.int.fill = "black")+ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
#Inter-Failure Times
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("TIME BETWEEN FAILURES")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 11, face = "bold"))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2)
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 11), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE)
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 11), conf.int = TRUE, color = "black", conf.int.fill = "black")+ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
#Inter-Failure Times
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 11, face = "bold"))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2)
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 12))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2)
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 13, face = "bold"))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2)
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 15))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2)
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png")
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 16), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE)
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 16), conf.int = TRUE, color = "black", conf.int.fill = "black")+ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
#Inter-Failure Times
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 20))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 16), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE)
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 16), conf.int = TRUE, color = "black", conf.int.fill = "black")+ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
#Inter-Failure Times
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 19))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 20), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE)
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 20), conf.int = TRUE, color = "black", conf.int.fill = "black")+ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
#Inter-Failure Times
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 23))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 20), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE)
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 20), conf.int = TRUE, color = "black", conf.int.fill = "black")+ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
#Inter-Failure Times
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 24))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
p1 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 20), fun = "event", conf.int = TRUE, color = "black", conf.int.fill = "black") + ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "UNRELIABILITY (CDF)")+coord_cartesian(expand = FALSE)
#RELIABILITY
p2 <- ggsurvplot(Time.to.Fail.km, ggtheme = theme_gray(base_size = 20), conf.int = TRUE, color = "black", conf.int.fill = "black")+ggtitle("Kaplan Meier: Time to Failure") + labs(x = "HOURS", y = "RELIABILITY")+coord_cartesian(expand = FALSE)
#Inter-Failure Times
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 24), axis.text=element_text(size=24), axis.title=element_text(size=24))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 24), axis.title.x = "HOURS", axis.text=element_text(size=24), axis.title=element_text(size=24))
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 24), axis.title.x = element_text("HOURS"), axis.text=element_text(size=24), axis.title=element_text(size=24))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 24), axis.title.x = element_text(text = "HOURS"), axis.text=element_text(size=24), axis.title=element_text(size=24))
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+geom_point()+geom_line()+ theme(plot.title = element_text(size = 24), axis.title.x = element_text(text("HOURS")), axis.text=element_text(size=24), axis.title=element_text(size=24))
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+ labs(x ="HOURS", y = "TIME BETWEEN FAILURES") + theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22)) + geom_point()+geom_line()+ theme(plot.title = element_text(size = 24), axis.text=element_text(size=24), axis.title=element_text(size=24))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+ labs(x ="HOURS", y = "TIME BETWEEN FAILURES") + theme(axis.title = element_text(size=24)) + geom_point()+geom_line()+ theme(plot.title = element_text(size = 24), axis.text=element_text(size=24), axis.title=element_text(size=24))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+ labs(x ="HOURS", y = "TIME BETWEEN FAILURES") + theme(axis.title = element_text(size=24), axis.text=element_text(size=24)) + geom_point()+geom_line()+ theme(plot.title = element_text(size = 24))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+ labs(x ="HOURS", y = "TIME BETWEEN FAILURES") + theme(axis.title = element_text(size=24)) + geom_point()+geom_line()+ theme(plot.title = element_text(size = 24))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+ labs(x ="HOURS", y = "TIME BETWEEN FAILURES") + theme(axis.title = element_text(size=10)) + geom_point()+geom_line()+ theme(plot.title = element_text(size = 24))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+ labs(x ="HOURS", y = "TIME BETWEEN FAILURES") + theme(axis.title = element_text(size=24), axis.text=element_text(size=10)) + geom_point()+geom_line()+ theme(plot.title = element_text(size = 24))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+ labs(x ="HOURS", y = "TIME BETWEEN FAILURES") + theme(axis.title = element_text(size=24), axis.text=element_text(size=16)) + geom_point()+geom_line()+ theme(plot.title = element_text(size = 24))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+ labs(x ="HOURS", y = "TIME BETWEEN FAILURES") + theme(axis.title = element_text(size=23), axis.text=element_text(size=16)) + geom_point()+geom_line()+ theme(plot.title = element_text(size = 24))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+ labs(x ="HOURS", y = "TIME BETWEEN FAILURES") + theme(axis.title = element_text(size=22.5), axis.text=element_text(size=16)) + geom_point()+geom_line()+ theme(plot.title = element_text(size = 24))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
p3 <- ggplot(data=AllData, aes(Time.to.Fail,Time.Between.Failure))+ggtitle("Time Between Failures")+ labs(x ="HOURS", y = "TIME BETWEEN FAILURES") + theme(axis.title = element_text(size=22), axis.text=element_text(size=16)) + geom_point()+geom_line()+ theme(plot.title = element_text(size = 24))
ggarrange(p1$plot, p2$plot, p3, ncol = 2, nrow = 2) %>% ggexport(filename = "data/test.png", width = 1080, height = 900)
library(xlsx)
library(ggplot2)
library(ggpubr)
library(survMisc)
library(survival)
library(survminer)
library(data.table)
library(grid)
library(gridExtra)
source("misc.R")
# Getting the data
AllData <- read.xlsx(filePath, 1, startRow = 6, colIndex = c(1, 4, 5, 6, 7, 9))
AllData$Type <- gsub('DEAMS - ', '', AllData$Type)
AllData$Severity <- gsub('Severity ', '', AllData$Severity)
AllData <- AllData[order(AllData$Submit.Date), ]
# Regex to get the locations and customer (after this should drop description)
AllData$Location <- trimws(sapply(regmatches(AllData$Description, gregexpr("(?<=Base:).*?(?=\\w).*?(?=(\\s{2,3})|((I|i)ssue:))", AllData$Description, perl = TRUE)), '[',1))
AllData$Customer <- trimws(sapply(regmatches(AllData$Description, gregexpr("(?<=((C|c)ustomer:)).*?(?=\\w).*?(?=(\\s{2,3})|((E|e)mail:))", AllData$Description, perl = TRUE)), '[',1))
#output to xlsx file (i need to look at the data)
write.xlsx(AllData, file = "data/output.xlsx", sheetName = "output")
length(unique(AllData$Location))
head(unique(AllData$Location))
match("wp", tolower(AllData$Location))
head(unique(tolower(AllData$Location)))
head(grep("wp", AllData$Location, ignore.case = TRUE, value = TRUE))
grep("wp", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("wp|wright", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("trans", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("trans|scott", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("tyn", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("trav", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("socom|macdill", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("socom|mac", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("whi", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("war", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("sey", AllData$Location, ignore.case = TRUE, value = TRUE)
unique(grep("sey", AllData$Location, ignore.case = TRUE, value = TRUE))
unique(grep("san a", AllData$Location, ignore.case = TRUE, value = TRUE))
unique(grep("lack", AllData$Location, ignore.case = TRUE, value = TRUE))
unique(grep("jbs", AllData$Location, ignore.case = TRUE, value = TRUE))
unique(grep("san a|lack", AllData$Location, ignore.case = TRUE, value = TRUE))
unique(grep("san a|lack|kell", AllData$Location, ignore.case = TRUE, value = TRUE))
grep("mcconn", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("mcgui", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("minot", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("pope", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("san a|lack|jbsa", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("san a|lack", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("lime", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("little", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("li", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("(li)&(!little)", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("li\&\!little", AllData$Location, ignore.case = TRUE, value = TRUE)
intersect(grep("li|lime", AllData$Location), grep("little", AllData$Location))
grep('^(li|lime|[^little])*$', AllData$Location)
grep("^[^little]*[li|lime][^little]*$", AllData$Location)
length(grep("^[^little]*[li|lime][^little]*$", AllData$Location))
length(grep("^[^little]*[li|lime][^little]*$", AllData$Location, ignore.case = TRUE, value = TRUE))
grep("^[^little]*[li|lime][^little]*$", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("^[li|lime]*$", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("^[li|lime]\", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("^[li|lime]", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("[li|lime]", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("li|lime", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("^li|lime", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("^li|lime$", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("[^li]", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("^li|^little", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("^li|[^little]", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("^li", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("^li|lime$", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("^li|lime", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("li|lime", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("^li|lime", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("(^li|lime)", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("(^li|lime)|[^\\blittle\\b]", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("(^li|lime)|[\\blittle\\b]", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("(^\\bli\\b|lime)", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("(^(\\bli\\b)|lime)", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("(^\\bli\\b$|lime)", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("(^\\bli\\b\\w|lime)", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("(^(\\bli\\b)|lime)", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("(\\bli\\b)|lime", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("little", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("little|li", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("little|lra", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("dill", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("scott", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("mino", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("mood", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("max", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("malm", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("mcgui|MDL", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("fair", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("forks|gf", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("\\bgf\\b|forks", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("ells", AllData$Location, ignore.case = TRUE, value = TRUE)
AllData$Phone <- trimws(sapply(regmatches(AllData$Description, gregexpr("(?<=((P|p)hone:)).*?(?=\\w).*?(?=(\\s{2,3})|((B|b)ase:))", AllData$Description, perl = TRUE)), '[',1))
grep("dover", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("dov", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("(\\bli\\b)|lime", AllData$Location, ignore.case = TRUE, value = TRUE)
grep("dfas", AllData$Location, ignore.case = TRUE, value = TRUE)
x <- c("some", "body")
y <- c("SOME", "BODY")
list(x, y)
z <- list(x, y)
z
z[1]
z[[1]]
z[[2]]
z[,1]
match?
?match
match(AllData$Location, grep("san a|lack|jbsa", AllData$Location, ignore.case = TRUE, value = TRUE))
unique(grep("san a|lack|jbsa", AllData$Location, ignore.case = TRUE, value = TRUE))
match(AllData$Location, unique(grep("san a|lack|jbsa", AllData$Location, ignore.case = TRUE, value = TRUE)))
u <- unique(grep("san a|lack|jbsa", AllData$Location, ignore.case = TRUE, value = TRUE))
match(u, AllData$Location)
unique(grep("san a|lack|jbsa", AllData$Location, ignore.case = TRUE, value = TRUE))
which(u %in% AllData$Location)
which(AllData$Location %in% u)
grep("san a|lack|jbsa", AllData$Location, ignore.case = TRUE, value = TRUE)
AllData$Location[which(AllData$Location %in% u)]
AllData$Location[which(AllData$Location %in% u)] <- "JBSA"
AllData$Location[which(AllData$Location %in% u)]
